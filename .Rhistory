data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data2, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
View(merged_data)
data <- merged_data %>%
group_by(Term.Code) %>%
summarise(DistinctStudentCount = n_distinct(Student.ID))
View(data)
data <- merged_data %>%
group_by(Term.Code) %>%
summarise(DistinctStudentCount = n_distinct(Student.ID))
p = ggplot(data, aes(x = `Term.Code`, y = `DistinctStudentCount`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
data <- merged_data %>%
group_by(Term.Code) %>%
summarise(DistinctStudentCount = n_distinct(Student.ID))
p = ggplot(data, aes(x = `Term.Code`, y = `DistinctStudentCount`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue") +
xlab("Term Code") +
ylab("Enrolled Student Count") + +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data <- merged_data %>%
group_by(Term.Code) %>%
summarise(DistinctStudentCount = n_distinct(Student.ID))
p = ggplot(data, aes(x = `Term.Code`, y = `DistinctStudentCount`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue") +
xlab("Term Code") +
ylab("Enrolled Student Count") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
View(studentinfo)
# Create a new column indicating whether a student is a Business Analytics major for each major column
merged_data$Major.1_BA <- ifelse(grepl("BA Major", data$Major1), 1, 0)
# Create a new column indicating whether a student is a Business Analytics major for each major column
merged_data$Major.1 <- ifelse(grepl("BA Major", data$Major1), 1, 0)
# Create a new column indicating whether a student is a Business Analytics major for each major column
merged_data$Major.1_ <- ifelse(grepl("BA Major", data$Major.1), 1, 0)
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
display(p)
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
print(p)
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
print(p)
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
P
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
p
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
p
knitr::opts_chunk$set(echo = TRUE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(#DataExplorer, # For explorer and cleaning data by visualizing missing values.
gptstudio,#For coding assistance
httr, # For downloading the data from the UCI
tidyverse, # For data manipulation
sjPlot,
corrplot, # for heatmaps
DataExplorer, #for exploring data
skimr, # for nice summary of data
readxl,
dplyr
) # For creating dummy variables of categorical variables automatically.)
sessionInfo()
data = read_excel("Thematic Sequence.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("ISA2 Thematic Sequence Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
p
data = read_excel("BA Minors.xlsx")
p = ggplot(data, aes(x = `Term Code`, y = `Enrolled Student Count`)) +
geom_bar(stat = "identity", color = "steelblue", fill = "steelblue", width = 0.8) +
xlab("Term Code") +
ylab("Enrolled Student Count") +
ggtitle("Business Analytics Minor Enrollment over Terms") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
merged_data = read.csv('StudentData')
ba_major_counts_by_term <- aggregate(Major.1 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term2 <- aggregate(Major.2 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
ba_major_counts_by_term3 <- aggregate(Major.3 ~ Term.Code, data = merged_data, function(x) sum(x == "BA Major"))
# Assuming ba_major_counts_by_term, ba_major_counts_by_term2, ba_major_counts_by_term3 are your data frames
merged_counts <- merge(ba_major_counts_by_term, ba_major_counts_by_term2, by = "Term.Code", all = TRUE)
merged_counts <- merge(merged_counts, ba_major_counts_by_term3, by = "Term.Code", all = TRUE)
# Replace missing values with zeros
merged_counts[is.na(merged_counts)] <- 0
# Set column names for clarity
names(merged_counts) <- c("Term.Code", "BA_Major_Count_1", "BA_Major_Count_2", "BA_Major_Count_3")
# Display the result
print(merged_counts)
p <- ggplot(merged_counts, aes(x = Term.Code)) +
geom_bar(aes(y = BA_Major_Count_1), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_2), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
geom_bar(aes(y = BA_Major_Count_3), stat = "identity", position = "dodge", fill = "steelblue", color = "steelblue", width = 5) +
xlab("Term Code") +
ylab("BA Major Count") +
ggtitle("BA Major Counts by Term") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text = element_text(size = 8),  # Adjust the size of axis text
panel.grid.major.x = element_blank(),  # Hide major gridlines
panel.grid.minor.x = element_blank())
p
